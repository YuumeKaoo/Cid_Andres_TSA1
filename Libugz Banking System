#include <iostream>
#include <string>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <random>
using namespace std;

class Bank {
private:
    struct Account {
        string fName, mName, lName, addr, accountType;
        char g, M, F;
        double init_Deposit, balance, savings_Deposit, limit_Deposit;
        int pin, bmonth, bday, byear, account_Number = 0;
        
    };
Account user;

        bool CheckPin(int enteredPin) {
            return enteredPin == user.pin;
		}
		
		bool CheckAccNumber(int enteredNumber) {
			return enteredNumber == user.account_Number;
		}

        void ViewAccountInfo() {
        	int enteredNumber;
    		cout << "Enter Account Number: ";
    		cin >> enteredNumber;
    		if (enteredNumber != user.account_Number) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}
    		
        	int enteredPin;
    		cout << "Enter PIN: ";
    		cin >> enteredPin;
    		if (enteredPin != user.pin) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}
        	
        	//string fullName = user.fName + " " + user.mName + " " + user.lName;
            cout << " \n=======================================" << endl;
            cout << "Full Name: " << user.fName << " " << user.mName << " " << user.lName << endl;
            //cout << "Full Name: " << fullName << endl;
            cout << "Address: " << user.addr << endl;
            cout << "Birthday: " << user.bmonth << " " << user.bday << " " << user.byear << endl;
            cout << "Gender: " << user.g << endl;
            cout << "Account Type: " << user.accountType << endl;
            cout << "Initial Deposit: " << user.init_Deposit << endl;
            cout << "Current Balance: " << user.balance << endl;
            cout << " =======================================\n" << endl;
        }

        void CreateAccount() {
        	// This is the Create Account Function. It allows you to create an Account.
            cout << "Please enter your First Name: ";
            cin.ignore();
            getline(cin, user.fName);

            cout << "Please enter your Middle Name: ";
            cin >> user.mName;

            cout << "Please enter your Last Name: ";
            cin >> user.lName;

            cout << "Please enter your Address: ";
            cin.ignore();
            getline(cin, user.addr);
            
			user.byear, user.bmonth, user.bday;
  			time_t now = time(0);
  			tm* ltm = localtime(&now);
  			int currentYear = ltm->tm_year + 1900;

			cout << "Please enter your Birth Year: ";
			cin >> user.byear;
		
			cout << "Please enter your Birth Month (1-12): ";
			cin >> user.bmonth;
			
			cout << "Please enter your Birth Day (1-31): ";
			cin >> user.bday;
			
			if (user.byear > currentYear) {
			cout << "\nInvalid birth year. Please enter a valid year.\n" << endl;
			}
			
			if (user.bmonth < 1 || user.bmonth > 12) {
			cout << "\nInvalid birth month. Please enter a valid month between 1 and 12.\n" << endl;
			return;
			}
			
			if (user.bday < 1 || user.bday > 31) {
			cout << "\nInvalid birth day. Please enter a valid day between 1 and 31.\n" << endl;
			return;
			}
			
			int age = currentYear - user.byear;
			
			if (user.bmonth > ltm->tm_mon + 1 || (user.bmonth == ltm->tm_mon + 1 && user.bday > ltm->tm_mday)) {
			age--;
			}
			
			if (age <= 17) {
			cout << "\nYou need to be old enough to create an account.\n" << endl;
			return;
			}

		    while (true) {
		        cout << "Enter Gender (M/F): ";
		        cin >> user.g;
		
		        if (user.g == 'M' || user.g == 'F') {
		            break;  // Exit the loop if valid input is provided
		        } else {
		            cout << "\nInvalid input. Please enter 'M' or 'F'.\n" << endl;
		        }
		    }
		
			cout << "You entered: " << user.g << endl;
                    
   			cout << "Choose Account Type (1. Savings Account (SA) / 2. Current Account (CA) ): ";
   			int accountChoice;
    		cin >> accountChoice;
		
		

    switch (accountChoice) {
        case 1:
          
            user.accountType = "Savings";
            user.limit_Deposit = 5000;
           
            break;
       
        case 2:
          
            user.accountType = "Current";
            user.limit_Deposit = 10000;
          
            break;
       
        default:
           
            cout << "Invalid choice. Transaction failed." << endl;
            return;
    }

    cout << "Enter Initial Deposit: ";
    cin >> user.init_Deposit;

        if (user.init_Deposit < user.limit_Deposit) {
          
            cout << "\nInitial Deposit should be more than or equal to " << user.limit_Deposit << ". Failed to create an account.\n" << endl;
            return;
    }
    
	    srand(static_cast<unsigned int>(time(nullptr)));

    // This is the Account Number Generator. It generated an 8 Digit Account Number. It is only 8 inistead of 16 digits due to Interger Overflow Issues.
    long long account_Number = 0;
    for (int i = 0; i < 8; ++i) {
        user.account_Number = user.account_Number * 10 + rand() % 10;
    }

    cout << "Enter a 6-digit PIN: ";
    cin >> user.pin;
    cout << "\nAccount Created Successfully" << endl;
    cout << "Account Number: " << abs(user.account_Number) << endl;
    cout << "User PIN: " << user.pin << "\n" << endl;

    user.balance = user.init_Deposit;
}

void balanceInquiry() {
		// This is the Balance Inquiry Function. It allows you to to check how much money is in your account.
    		int enteredNumber;
    		cout << "Enter Account Number: ";
    		cin >> enteredNumber;
    		if (enteredNumber != user.account_Number) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}
    		
        	int enteredPin;
    		cout << "Enter PIN: ";
    		cin >> enteredPin;
    		if (enteredPin != user.pin) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}

    if (CheckPin(enteredPin)) {
       
        cout << "\nCurrent Balance: " << user.balance << "\n" << endl;
    } else {
       
        cout << "\nThe PIN you have entered is incorrect. Please try again.\n" << endl;
    }
}

void deposit() {
	// This is the Deposit Function. It allows you to deposit money into your account.
    double depositAmount;
    		int enteredNumber;
    		cout << "Enter Account Number: ";
    		cin >> enteredNumber;
    		if (enteredNumber != user.account_Number) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}
    		
        	int enteredPin;
    		cout << "Enter PIN: ";
    		cin >> enteredPin;
    		if (enteredPin != user.pin) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}

    if (!CheckPin(enteredPin)) {
      
        cout << "\nThe PIN you have entered is incorrect. Transaction failed.\n" << endl;
        return displayMenu();
    }

    cout << "Enter Deposit Amount: ";
    cin >> depositAmount;


    if (depositAmount < 0 || depositAmount < 300) {
       
        cout << "\nInvalid amount. Please enter a valid amount or cancel the transaction." << endl;
        cout << "Transaction failed\n";
        return displayMenu();
    }

    double minDepositAmount = (user.accountType == "Savings") ? 300 : 500;
    
    
    if (depositAmount < minDepositAmount) {
      
        cout << "\nDeposit amount should be at least " << minDepositAmount << ". Transaction failed.\n" << endl;
        return displayMenu();
    }

    char confirm;
    cout << "Confirm Deposit? (Y/N): ";
    cin >> confirm;


    if (confirm == 'Y' || confirm == 'y') {
       
        user.balance += depositAmount;
        cout << "\nTransaction Successful. Your new balance is: " << user.balance << "\n" << endl;
    } else {
       
        cout << "\nTransaction Cancelled.\n" << endl;
    }
}

void withdraw() {
	// This is the Withdraw Function. It allows you to withdraw money from your bank account.
    double withdrawAmount;
    		int enteredNumber;
    		cout << "Enter Account Number: ";
    		cin >> enteredNumber;
    		if (enteredNumber != user.account_Number) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}
    		
        	int enteredPin;
    		cout << "Enter PIN: ";
    		cin >> enteredPin;
    		if (enteredPin != user.pin) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}

    if (!CheckPin(enteredPin)) {
      
        cout << "\nThe PIN you have entered is incorrect. Transaction failed.\n" << endl;
        return displayMenu();
    }

    cout << "Enter Amount: ";
    cin >> withdrawAmount;

    if (withdrawAmount < 0 || withdrawAmount > user.balance) {
        
        cout << "\nInvalid amount. Please enter a valid amount or cancel the transaction.\n" << endl;
        return displayMenu();
    }

    double minWithdrawalAmount = (user.accountType == "Savings") ? 300 : 500;
    if (withdrawAmount < minWithdrawalAmount) {
      
        cout << "\nWithdrawal amount should be at least " << minWithdrawalAmount << ". Transaction failed.\n" << endl;
        return displayMenu();
    }

    char confirm;
    cout << "Confirm Withdrawal? (Y/N): ";
    cin >> confirm;

    if (confirm == 'Y' || confirm == 'y') {
       
        user.balance -= withdrawAmount;
        cout << "Transaction Successful. Your new balance is: " << user.balance << "\n" << endl;
    } else {
        cout << "\nTransaction Cancelled.\n" << endl;
    }
}

void closeAccount() {
		// This is the Close Account Function. It allows you to close your bank account.
    		int enteredNumber;
    		cout << "Enter Account Number: ";
    		cin >> enteredNumber;
    		if (enteredNumber != user.account_Number) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}
    		
        	int enteredPin;
    		cout << "Enter PIN: ";
    		cin >> enteredPin;
    		if (enteredPin != user.pin) {
			cout << "\nYou entered the wrong account number. Please try again.\n" << endl;
			return displayMenu();
			}

    if (!CheckPin(enteredPin)) {
        cout << "\nThe PIN you have entered is incorrect. Transaction failed.\n" << endl;
        return displayMenu();
    }

    char confirm;
    cout << "Are you sure you want to close your account? (Y/N): ";
    cin >> confirm;

    if (confirm == 'Y' || confirm == 'y') {
      
        cout << "\nAccount Closed. Remaining Balance: " << user.balance << "\n" << endl;



        user = Account();
    } else {
        cout << "\nAccount Termination Cancelled.\n" << endl;
    }
}


public:
   
    void displayMenu() {
        int choice;
        do {
            cout << " =======================================";
            cout << "\n =             " << "LIBUGZ BANK " << "            =\n";
            cout << " =======================================" << endl;
            cout << "1. Create New Account\n";
            cout << "2. Balance Inquiry\n";
            cout << "3. Deposit\n";
            cout << "4. Withdraw\n";
            cout << "5. View Account Information\n";
            cout << "6. Close Account\n";
            cout << "7. Exit Program\n" << endl;
            cout << "Enter your choice: ";
            cin >> choice;

            switch (choice) {
                case 1:
                    CreateAccount();
                    break;
                    
                case 2:
                    balanceInquiry();
                    break;

                case 3:
                    deposit();
                    break;

                case 4:
                    withdraw();
                    break;

                case 5:
                    ViewAccountInfo();
                    break;

                case 6:
                    closeAccount();
                    break;

                case 7:
                 
                 cout << "\nThank you for using our banking system. Goodbye!\n" << endl;
                    
                    cout << "=================================================\n";
                    cout << "\t\tLIBUGZ MEMBERS\n";
                    cout << "=================================================\n";
                    cout << "\n\t\tKenn Jiro Agustin\n";
                    cout << "\t\tBaron Jamille J. Andres\n";
                    cout << "\t\tMichael Andrae E. Cid\n";
                    cout << "\t\tMarx Gabriell I. Manzo\n"; 
                    exit (0);
                    break;
               
                default:
                    cout << "Invalid choice. Please enter a valid option.\n";
                    exit (0);
            }
        } while (choice != 7);
    }
};

int main() {
    Bank bank;
    bank.displayMenu();

    return 0;
}
